# Created by Topology-Converter v5.0.0
#    Template Revision: v5.0.0
#    https://github.com/cumulusnetworks/topology_converter
#    using topology data from: ./tests/dot_files/reference_topology.dot
#    built with the following args: ['./tests/dot_files/reference_topology.dot']
#    NOTE: in order to use this Vagrantfile you will need:
#        - Vagrant(v2.0.2+) installed: http://www.vagrantup.com/downloads
#        - the "helper_scripts" directory that comes packaged with topology-converter.py
#       -Virtualbox installed: https://www.virtualbox.org/wiki/Downloads

Vagrant.require_version ">= 2.0.2"

$script = <<-SCRIPT
if grep -q -i 'cumulus' /etc/lsb-release &> /dev/null; then
    echo "### RUNNING CUMULUS EXTRA CONFIG ###"
    source /etc/lsb-release
    if [ -z /etc/app-release ]; then
        echo "  INFO: Detected NetQ TS Server"
        source /etc/app-release
        echo "  INFO: Running NetQ TS Appliance Version $APPLIANCE_VERSION"
    else
        if [[ $DISTRIB_RELEASE =~ ^2.* ]]; then
            echo "  INFO: Detected a 2.5.x Based Release"

            echo "  adding fake cl-acltool..."
            echo -e "#!/bin/bash\nexit 0" > /usr/bin/cl-acltool
            chmod 755 /usr/bin/cl-acltool

            echo "  adding fake cl-license..."
            echo -e "#!/bin/bash\nexit 0" > /usr/bin/cl-license
            chmod 755 /usr/bin/cl-license

            echo "  Disabling default remap on Cumulus VX..."
            mv -v /etc/init.d/rename_eth_swp /etc/init.d/rename_eth_swp.backup

            echo "### Rebooting to Apply Remap..."

        elif [[ $DISTRIB_RELEASE =~ ^3.* ]]; then
            echo "  INFO: Detected a 3.x Based Release"
            echo "### Disabling default remap on Cumulus VX..."
            mv -v /etc/hw_init.d/S10rename_eth_swp.sh /etc/S10rename_eth_swp.sh.backup &> /dev/null
            echo "### Disabling ZTP service..."
            systemctl stop ztp.service
            ztp -d 2>&1
            echo "### Resetting ZTP to work next boot..."
            ztp -R 2>&1
            echo "  INFO: Detected Cumulus Linux v$DISTRIB_RELEASE Release"
            if [[ $DISTRIB_RELEASE =~ ^3.[1-9].* ]]; then
                echo "### Fixing ONIE DHCP to avoid Vagrant Interface ###"
                echo "     Note: Installing from ONIE will undo these changes."
                mkdir /tmp/foo
                mount LABEL=ONIE-BOOT /tmp/foo
                sed -i 's/eth0/eth1/g' /tmp/foo/grub/grub.cfg
                sed -i 's/eth0/eth1/g' /tmp/foo/onie/grub/grub-extra.cfg
                umount /tmp/foo
            fi
            if [[ $DISTRIB_RELEASE =~ ^3.[2-9].* ]]; then
                if [[ $(grep "vagrant" /etc/netd.conf | wc -l ) == 0 ]]; then
                    echo "### Giving Vagrant User Ability to Run NCLU Commands ###"
                    sed -i 's/users_with_edit = root, cumulus/users_with_edit = root, cumulus, vagrant/g' /etc/netd.conf
                    sed -i 's/users_with_show = root, cumulus/users_with_show = root, cumulus, vagrant/g' /etc/netd.conf
                fi
            fi
        fi
    fi
fi
echo "### DONE ###"
echo "### Rebooting Device to Apply Remap..."
nohup bash -c 'sleep 10; shutdown now -r "Rebooting to Remap Interfaces"' &
SCRIPT

Vagrant.configure("2") do |config|

  simid = 1522628455

  config.vm.provider "virtualbox" do |v|
    v.gui = false
  end


        
##### DEFINE VM for oob-mgmt-server #####
  config.vm.define "oob-mgmt-server" do |device|
    
    device.vm.hostname = "oob-mgmt-server"
    device.vm.box = "CumulusCommunity/vx_oob_server"
    device.vm.box_version = "1.0.4"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 1024
        
        v.name = "#{simid}_oob-mgmt-server"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth1 --> oob-mgmt-switch:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network54", auto_config: false , :mac => "443839000057"
    # link for eth0 --> NOTHING:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network62", auto_config: false , :mac => "443839000064" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_oob_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:57 --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:57", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:64 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:64", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for oob-mgmt-switch #####
  config.vm.define "oob-mgmt-switch" do |device|
    
    device.vm.hostname = "oob-mgmt-switch"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_oob-mgmt-switch"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc13', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc14', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc15', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc16', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc17', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth0 --> NOTHING:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network61", auto_config: false , :mac => "443839000062"
    # link for swp10 --> spine01:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network31", auto_config: false , :mac => "443839000032"
    # link for swp11 --> spine02:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network59", auto_config: false , :mac => "44383900005f"
    # link for swp12 --> exit01:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network9", auto_config: false , :mac => "44383900000f"
    # link for swp13 --> exit02:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network48", auto_config: false , :mac => "44383900004d"
    # link for swp14 --> edge01:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network40", auto_config: false , :mac => "443839000040"
    # link for swp15 --> internet:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network35", auto_config: false , :mac => "443839000038"
    # link for swp8 --> leaf03:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network28", auto_config: false , :mac => "44383900002d"
    # link for swp9 --> leaf04:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network34", auto_config: false , :mac => "443839000037"
    # link for swp2 --> server01:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network42", auto_config: false , :mac => "443839000043"
    # link for swp3 --> server02:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network47", auto_config: false , :mac => "44383900004c"
    # link for swp1 --> oob-mgmt-server:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network54", auto_config: false , :mac => "a00000000061"
    # link for swp6 --> leaf01:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network20", auto_config: false , :mac => "443839000020"
    # link for swp7 --> leaf02:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network38", auto_config: false , :mac => "44383900003d"
    # link for swp4 --> server03:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network3", auto_config: false , :mac => "443839000004"
    # link for swp5 --> server04:eth0
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network49", auto_config: false , :mac => "44383900004e" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_oob_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:62 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:62", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:32 --> swp10'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:32", NAME="swp10", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5f --> swp11'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5f", NAME="swp11", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0f --> swp12'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0f", NAME="swp12", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4d --> swp13'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4d", NAME="swp13", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:40 --> swp14'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:40", NAME="swp14", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:38 --> swp15'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:38", NAME="swp15", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2d --> swp8'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2d", NAME="swp8", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:37 --> swp9'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:37", NAME="swp9", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:43 --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:43", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4c --> swp3'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4c", NAME="swp3", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:61 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:61", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:20 --> swp6'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:20", NAME="swp6", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3d --> swp7'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3d", NAME="swp7", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:04 --> swp4'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:04", NAME="swp4", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4e --> swp5'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4e", NAME="swp5", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for exit02 #####
  config.vm.define "exit02" do |device|
    
    device.vm.hostname = "exit02"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_exit02"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth0 --> oob-mgmt-switch:swp13
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network48", auto_config: false , :mac => "a00000000042"
    # link for swp50 --> exit01:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network14", auto_config: false , :mac => "443839000017"
    # link for swp51 --> spine01:swp29
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network21", auto_config: false , :mac => "443839000021"
    # link for swp52 --> spine02:swp29
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network53", auto_config: false , :mac => "443839000055"
    # link for swp49 --> exit01:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network24", auto_config: false , :mac => "443839000027"
    # link for swp48 --> exit02:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network33", auto_config: false , :mac => "443839000036"
    # link for swp1 --> edge01:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network7", auto_config: false , :mac => "44383900000c"
    # link for swp47 --> exit02:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network33", auto_config: false , :mac => "443839000035"
    # link for swp46 --> exit02:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network30", auto_config: false , :mac => "443839000031"
    # link for swp45 --> exit02:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network30", auto_config: false , :mac => "443839000030"
    # link for swp44 --> internet:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network39", auto_config: false , :mac => "44383900003f" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:42 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:42", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:17 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:17", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:21 --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:21", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:55 --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:55", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:27 --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:27", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:36 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:36", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0c --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0c", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:35 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:35", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:31 --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:31", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:30 --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:30", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3f --> swp44'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3f", NAME="swp44", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for exit01 #####
  config.vm.define "exit01" do |device|
    
    device.vm.hostname = "exit01"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_exit01"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp1 --> edge01:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network46", auto_config: false , :mac => "44383900004b"
    # link for swp50 --> exit02:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network14", auto_config: false , :mac => "443839000016"
    # link for swp51 --> spine01:swp30
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network6", auto_config: false , :mac => "443839000009"
    # link for swp52 --> spine02:swp30
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network56", auto_config: false , :mac => "44383900005a"
    # link for swp49 --> exit02:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network24", auto_config: false , :mac => "443839000026"
    # link for swp48 --> exit01:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network11", auto_config: false , :mac => "443839000013"
    # link for swp44 --> internet:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network5", auto_config: false , :mac => "443839000008"
    # link for swp47 --> exit01:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network11", auto_config: false , :mac => "443839000012"
    # link for swp46 --> exit01:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network43", auto_config: false , :mac => "443839000045"
    # link for swp45 --> exit01:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network43", auto_config: false , :mac => "443839000044"
    # link for eth0 --> oob-mgmt-switch:swp12
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network9", auto_config: false , :mac => "a00000000041" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4b --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4b", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:16 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:16", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:09 --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:09", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5a --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5a", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:26 --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:26", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:13 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:13", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:08 --> swp44'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:08", NAME="swp44", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:12 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:12", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:45 --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:45", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:44 --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:44", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:41 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:41", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for spine02 #####
  config.vm.define "spine02" do |device|
    
    device.vm.hostname = "spine02"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_spine02"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp32 --> spine01:swp32
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network36", auto_config: false , :mac => "44383900003a"
    # link for swp30 --> exit01:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network56", auto_config: false , :mac => "44383900005b"
    # link for swp31 --> spine01:swp31
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network45", auto_config: false , :mac => "443839000049"
    # link for swp29 --> exit02:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network53", auto_config: false , :mac => "443839000056"
    # link for swp2 --> leaf02:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network58", auto_config: false , :mac => "44383900005e"
    # link for swp3 --> leaf03:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network17", auto_config: false , :mac => "44383900001c"
    # link for swp1 --> leaf01:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network23", auto_config: false , :mac => "443839000025"
    # link for swp4 --> leaf04:swp52
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network44", auto_config: false , :mac => "443839000047"
    # link for eth0 --> oob-mgmt-switch:swp11
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network59", auto_config: false , :mac => "a00000000022" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3a --> swp32'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3a", NAME="swp32", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5b --> swp30'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5b", NAME="swp30", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:49 --> swp31'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:49", NAME="swp31", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:56 --> swp29'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:56", NAME="swp29", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5e --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5e", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1c --> swp3'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1c", NAME="swp3", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:25 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:25", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:47 --> swp4'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:47", NAME="swp4", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:22 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:22", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for spine01 #####
  config.vm.define "spine01" do |device|
    
    device.vm.hostname = "spine01"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_spine01"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp32 --> spine02:swp32
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network36", auto_config: false , :mac => "443839000039"
    # link for swp30 --> exit01:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network6", auto_config: false , :mac => "44383900000a"
    # link for swp31 --> spine02:swp31
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network45", auto_config: false , :mac => "443839000048"
    # link for swp29 --> exit02:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network21", auto_config: false , :mac => "443839000022"
    # link for swp2 --> leaf02:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network25", auto_config: false , :mac => "443839000029"
    # link for swp3 --> leaf03:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network50", auto_config: false , :mac => "443839000050"
    # link for swp1 --> leaf01:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network52", auto_config: false , :mac => "443839000054"
    # link for swp4 --> leaf04:swp51
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network37", auto_config: false , :mac => "44383900003c"
    # link for eth0 --> oob-mgmt-switch:swp10
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network31", auto_config: false , :mac => "a00000000021" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:39 --> swp32'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:39", NAME="swp32", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0a --> swp30'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0a", NAME="swp30", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:48 --> swp31'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:48", NAME="swp31", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:22 --> swp29'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:22", NAME="swp29", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:29 --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:29", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:50 --> swp3'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:50", NAME="swp3", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:54 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:54", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3c --> swp4'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3c", NAME="swp4", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:21 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:21", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for leaf04 #####
  config.vm.define "leaf04" do |device|
    
    device.vm.hostname = "leaf04"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_leaf04"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp50 --> leaf03:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network4", auto_config: false , :mac => "443839000006"
    # link for swp51 --> spine01:swp4
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network37", auto_config: false , :mac => "44383900003b"
    # link for swp52 --> spine02:swp4
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network44", auto_config: false , :mac => "443839000046"
    # link for swp49 --> leaf03:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network29", auto_config: false , :mac => "44383900002f"
    # link for swp48 --> leaf04:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network32", auto_config: false , :mac => "443839000034"
    # link for swp2 --> server04:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network27", auto_config: false , :mac => "44383900002c"
    # link for swp1 --> server03:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network57", auto_config: false , :mac => "44383900005c"
    # link for swp47 --> leaf04:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network32", auto_config: false , :mac => "443839000033"
    # link for swp46 --> leaf04:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network16", auto_config: false , :mac => "44383900001a"
    # link for swp45 --> leaf04:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network16", auto_config: false , :mac => "443839000019"
    # link for eth0 --> oob-mgmt-switch:swp9
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network34", auto_config: false , :mac => "a00000000014" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:06 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:06", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3b --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3b", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:46 --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:46", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2f --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2f", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:34 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:34", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2c --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2c", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5c --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5c", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:33 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:33", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1a --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1a", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:19 --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:19", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:14 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:14", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for leaf02 #####
  config.vm.define "leaf02" do |device|
    
    device.vm.hostname = "leaf02"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_leaf02"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp50 --> leaf01:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network1", auto_config: false , :mac => "443839000002"
    # link for swp51 --> spine01:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network25", auto_config: false , :mac => "443839000028"
    # link for swp52 --> spine02:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network58", auto_config: false , :mac => "44383900005d"
    # link for swp49 --> leaf01:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network10", auto_config: false , :mac => "443839000011"
    # link for swp48 --> leaf02:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network55", auto_config: false , :mac => "443839000059"
    # link for swp2 --> server02:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network15", auto_config: false , :mac => "443839000018"
    # link for swp1 --> server01:eth2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network13", auto_config: false , :mac => "443839000015"
    # link for swp47 --> leaf02:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network55", auto_config: false , :mac => "443839000058"
    # link for swp46 --> leaf02:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network8", auto_config: false , :mac => "44383900000e"
    # link for swp45 --> leaf02:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network8", auto_config: false , :mac => "44383900000d"
    # link for eth0 --> oob-mgmt-switch:swp7
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network38", auto_config: false , :mac => "a00000000012" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:02 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:02", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:28 --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:28", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:5d --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:5d", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:11 --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:11", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:59 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:59", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:18 --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:18", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:15 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:15", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:58 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:58", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0e --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0e", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0d --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0d", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:12 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:12", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for leaf03 #####
  config.vm.define "leaf03" do |device|
    
    device.vm.hostname = "leaf03"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_leaf03"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp50 --> leaf04:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network4", auto_config: false , :mac => "443839000005"
    # link for swp51 --> spine01:swp3
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network50", auto_config: false , :mac => "44383900004f"
    # link for swp52 --> spine02:swp3
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network17", auto_config: false , :mac => "44383900001b"
    # link for swp49 --> leaf04:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network29", auto_config: false , :mac => "44383900002e"
    # link for swp48 --> leaf03:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network51", auto_config: false , :mac => "443839000052"
    # link for swp2 --> server04:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network19", auto_config: false , :mac => "44383900001f"
    # link for swp1 --> server03:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network22", auto_config: false , :mac => "443839000023"
    # link for swp47 --> leaf03:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network51", auto_config: false , :mac => "443839000051"
    # link for swp46 --> leaf03:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network26", auto_config: false , :mac => "44383900002b"
    # link for swp45 --> leaf03:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network26", auto_config: false , :mac => "44383900002a"
    # link for eth0 --> oob-mgmt-switch:swp8
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network28", auto_config: false , :mac => "a00000000013" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:05 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:05", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4f --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4f", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1b --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1b", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2e --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2e", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:52 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:52", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1f --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1f", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:23 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:23", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:51 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:51", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2b --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2b", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:2a --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:2a", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:13 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:13", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for leaf01 #####
  config.vm.define "leaf01" do |device|
    
    device.vm.hostname = "leaf01"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_leaf01"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc5', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc6', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc7', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc8', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc9', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc10', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc11', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc12', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp50 --> leaf02:swp50
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network1", auto_config: false , :mac => "443839000001"
    # link for swp51 --> spine01:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network52", auto_config: false , :mac => "443839000053"
    # link for swp52 --> spine02:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network23", auto_config: false , :mac => "443839000024"
    # link for swp49 --> leaf02:swp49
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network10", auto_config: false , :mac => "443839000010"
    # link for swp48 --> leaf01:swp47
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network41", auto_config: false , :mac => "443839000042"
    # link for swp2 --> server02:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network12", auto_config: false , :mac => "443839000014"
    # link for swp1 --> server01:eth1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network2", auto_config: false , :mac => "443839000003"
    # link for swp47 --> leaf01:swp48
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network41", auto_config: false , :mac => "443839000041"
    # link for swp46 --> leaf01:swp45
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network18", auto_config: false , :mac => "44383900001e"
    # link for swp45 --> leaf01:swp46
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network18", auto_config: false , :mac => "44383900001d"
    # link for eth0 --> oob-mgmt-switch:swp6
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network20", auto_config: false , :mac => "a00000000011" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_switch.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:01 --> swp50'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:01", NAME="swp50", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:53 --> swp51'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:53", NAME="swp51", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:24 --> swp52'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:24", NAME="swp52", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:10 --> swp49'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:10", NAME="swp49", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:42 --> swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:42", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:14 --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:14", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:03 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:03", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:41 --> swp47'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:41", NAME="swp47", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1e --> swp46'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1e", NAME="swp46", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:1d --> swp45'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:1d", NAME="swp45", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:11 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:11", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for edge01 #####
  config.vm.define "edge01" do |device|
    
    device.vm.hostname = "edge01"
    device.vm.box = "yk0/ubuntu-xenial"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_edge01"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth2 --> exit02:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network7", auto_config: false , :mac => "44383900000b"
    # link for eth1 --> exit01:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network46", auto_config: false , :mac => "44383900004a"
    # link for eth0 --> oob-mgmt-switch:swp14
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network40", auto_config: false , :mac => "a00000000051" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    # Shorten Boot Process - Applies to Ubuntu Only - remove \"Wait for Network\"
    device.vm.provision :shell , inline: "sed -i 's/sleep [0-9]*/sleep 1/' /etc/init/failsafe.conf 2>/dev/null || true"
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:0b --> eth2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:0b", NAME="eth2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:4a --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:4a", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:51 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:51", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for server01 #####
  config.vm.define "server01" do |device|
    
    device.vm.hostname = "server01"
    device.vm.box = "yk0/ubuntu-xenial"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 512
        
        v.name = "#{simid}_server01"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth2 --> leaf02:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network13", auto_config: false , :mac => "300111102"
    # link for eth1 --> leaf01:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network2", auto_config: false , :mac => "300111101"
    # link for eth0 --> oob-mgmt-switch:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network42", auto_config: false , :mac => "a00000000031" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    # Shorten Boot Process - Applies to Ubuntu Only - remove \"Wait for Network\"
    device.vm.provision :shell , inline: "sed -i 's/sleep [0-9]*/sleep 1/' /etc/init/failsafe.conf 2>/dev/null || true"
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:01:11:10 --> eth2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:01:11:10", NAME="eth2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:01:11:10 --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:01:11:10", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:31 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:31", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for server03 #####
  config.vm.define "server03" do |device|
    
    device.vm.hostname = "server03"
    device.vm.box = "yk0/ubuntu-xenial"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 512
        
        v.name = "#{simid}_server03"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth2 --> leaf04:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network57", auto_config: false , :mac => "300333302"
    # link for eth1 --> leaf03:swp1
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network22", auto_config: false , :mac => "300333301"
    # link for eth0 --> oob-mgmt-switch:swp4
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network3", auto_config: false , :mac => "a00000000033" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    # Shorten Boot Process - Applies to Ubuntu Only - remove \"Wait for Network\"
    device.vm.provision :shell , inline: "sed -i 's/sleep [0-9]*/sleep 1/' /etc/init/failsafe.conf 2>/dev/null || true"
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:03:33:30 --> eth2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:03:33:30", NAME="eth2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:03:33:30 --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:03:33:30", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:33 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:33", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for server02 #####
  config.vm.define "server02" do |device|
    
    device.vm.hostname = "server02"
    device.vm.box = "yk0/ubuntu-xenial"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 512
        
        v.name = "#{simid}_server02"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth2 --> leaf02:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network15", auto_config: false , :mac => "300222202"
    # link for eth1 --> leaf01:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network12", auto_config: false , :mac => "300222201"
    # link for eth0 --> oob-mgmt-switch:swp3
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network47", auto_config: false , :mac => "a00000000032" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    # Shorten Boot Process - Applies to Ubuntu Only - remove \"Wait for Network\"
    device.vm.provision :shell , inline: "sed -i 's/sleep [0-9]*/sleep 1/' /etc/init/failsafe.conf 2>/dev/null || true"
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:02:22:20 --> eth2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:02:22:20", NAME="eth2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:02:22:20 --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:02:22:20", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:32 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:32", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for server04 #####
  config.vm.define "server04" do |device|
    
    device.vm.hostname = "server04"
    device.vm.box = "yk0/ubuntu-xenial"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 512
        
        v.name = "#{simid}_server04"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for eth2 --> leaf04:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network27", auto_config: false , :mac => "300444402"
    # link for eth1 --> leaf03:swp2
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network19", auto_config: false , :mac => "300444401"
    # link for eth0 --> oob-mgmt-switch:swp5
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network49", auto_config: false , :mac => "a00000000034" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    # Shorten Boot Process - Applies to Ubuntu Only - remove \"Wait for Network\"
    device.vm.provision :shell , inline: "sed -i 's/sleep [0-9]*/sleep 1/' /etc/init/failsafe.conf 2>/dev/null || true"
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_server.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:04:44:40 --> eth2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:04:44:40", NAME="eth2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 30:04:44:40 --> eth1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="30:04:44:40", NAME="eth1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:34 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:34", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = vagrant'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="vagrant", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
        
##### DEFINE VM for internet #####
  config.vm.define "internet" do |device|
    
    device.vm.hostname = "internet"
    device.vm.box = "CumulusCommunity/cumulus-vx"
    device.vm.box_version = "3.5.1"

    device.vm.provider "virtualbox" do |v|      
        v.memory = 768
        
        v.name = "#{simid}_internet"
        v.customize ["modifyvm", :id, '--audiocontroller', 'AC97', '--audio', 'Null']
        v.customize ["modifyvm", :id, '--nicpromisc2', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc3', 'allow-all']
        v.customize ["modifyvm", :id, '--nicpromisc4', 'allow-all']
        v.customize ["modifyvm", :id, '--nictype1', 'virtio']

    end
    # see note here: https://github.com/pradels/vagrant-libvirt#synced-folders
    device.vm.synced_folder ".", "/vagrant", disabled: true

    # NETWORK INTERFACES
    # link for swp2 --> exit02:swp44
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network39", auto_config: false , :mac => "44383900003e"
    # link for swp1 --> exit01:swp44
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network5", auto_config: false , :mac => "443839000007"
    # link for eth0 --> oob-mgmt-switch:swp15
    device.vm.network "private_network", virtualbox__intnet: "#{simid}_network35", auto_config: false , :mac => "a00000000050" 

    # Fixes "stdin: is not a tty" and "mesg: ttyname failed : Inappropriate ioctl for device"  messages --> https://github.com/mitchellh/vagrant/issues/1673
    device.vm.provision :shell , inline: "(sudo grep -q 'mesg n' /root/.profile 2>/dev/null && sudo sed -i '/mesg n/d' /root/.profile  2>/dev/null) || true;", privileged: false

    
        
    # Run the Config specified in the Node Attributes
    device.vm.provision :shell , privileged: false, :inline => 'echo "$(whoami)" > /tmp/normal_user'
    device.vm.provision :shell , path: "./helper_scripts/config_internet.sh"
    

    # Install Rules for the interface re-map
    device.vm.provision :shell , :inline => <<-delete_udev_directory
      if [ -d "/etc/udev/rules.d/70-persistent-net.rules" ]; then
        rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
      fi
      rm -rfv /etc/udev/rules.d/70-persistent-net.rules &> /dev/null
    delete_udev_directory
    
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:3e --> swp2'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:3e", NAME="swp2", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: 44:38:39:00:00:07 --> swp1'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="44:38:39:00:00:07", NAME="swp1", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule
    device.vm.provision :shell , :inline => <<-udev_rule
      echo '  INFO: Adding UDEV Rule: a0:00:00:00:00:50 --> eth0'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{address}=="a0:00:00:00:00:50", NAME="eth0", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
    udev_rule

    device.vm.provision :shell , :inline => <<-vagrant_interface_rule
      echo '  INFO: Adding UDEV Rule: Vagrant interface = swp48'
      echo 'ACTION=="add", SUBSYSTEM=="net", ATTR{ifindex}=="2", NAME="swp48", SUBSYSTEMS=="pci"' >> /etc/udev/rules.d/70-persistent-net.rules
      echo "#### UDEV Rules (/etc/udev/rules.d/70-persistent-net.rules) ####"
      cat /etc/udev/rules.d/70-persistent-net.rules
    vagrant_interface_rule

    # Run Any Platform Specific Code and Apply the interface Re-map
    #   (may or may not perform a reboot depending on platform)
    device.vm.provision :shell , :inline => $script

  end
end
 
